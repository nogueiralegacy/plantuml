@startuml diagrama

rectangle "persistância (Repository)" #line.dashed {
    class ClassName<Repository> {
+save(Type type): void
+delete(Type type): void
+update(Type type): void
+findById(String id): Type
+findAll(): List<Type>
    }
}

interface IClassName<Repository> {
+save(Type type): void
+delete(Type type): void
+update(Type type): void
+findById(String id): Type
+findAll(): List<Type>
}

rectangle "UI" #line.dashed {
class "UI" {
+main(): void
}
}


class Endereco {
-rua: String
-bairro: String
-complemento: String
-pais: enum
-estado: enum
-cidade: enum
-CEP: String
-numero: int
}

class Pessoa {
-nome: String
-sobrenome: String
-dataDeNascimento: Date
+cadastrarPessoa(Pessoa pessoa): boolean
}

class Usuario {
-nickname: String
-email: String
-dataRegistro: Date
-senha: String
-fotoPerfil: String
-descricao: String
-tag: String
+adicionaFotoPerfil(String imagem): void
+busca(String nome): List<Usuario>
+busca(String tag): Usuario
+armazenaBusca(List<Usuario>): void
+adicionaAmigo(Usuario usuario): void
+removeAmigo(Usuario usuario): void
+alteraSenha(String senha): void
+login(): void
+logout(): void
+apagarConta(): void
}

class Mensagem {
-data: Date
-texto: String
-visualizada: boolean
-imagem: String
-video: String
-id: String
+enviarMensagem(): void
+apagarMensagem(): void
}

class Forum {
-nome: String
-descricao: String
-quantidadeParticipantes: int
-id: String
+adicionarDescricao(String descricao): void
+adicionaParticipante(Usuario usuario): void
+removeParticipante(ParticipanteForum participante): void
+adicionaAdministrador(ParticipanteForum participante): boolean
+removeAdministrador(AdministradorForum administrador): void
+adicionaPostagem(Postagem postagem): void
+removePostagem(Postagem postagem): void
+criaForum(Usuario usuario): void
}

rectangle "regras de negócio" #line.dashed {

class Controller {
    +acaoRequisitada(Evento evento): void
    }

    class Verificador {
+validarCEP(String CEP): boolean
+validarSenha(String senha): boolean
+validarNickname(String nickname): boolean
+validarEmail(String email): boolean
}

class Autenticador {
+autorizadoAdicionarDescricao(Usuario usuario): boolean
+autorizadoRemoverParticipante(Usuario usuario): boolean
+autorizadoRemoverAdministrador(Usuario usuario): boolean
+autorizadoAdicionarAdministrador(Usuario usuario): boolean
+autorizadoRemoverPostagem(Usuario usuario): boolean
+autorizadoAlterarSenha(Usuario usuario): boolean
+autorizadoApagarConta(Usuario usuario): boolean
+autorizadoLogin(Usuario usuario): boolean
+autorizadoApagarComentario(Usuario usuario): boolean
}
}

class AdministradorForum {
}

class ParticipanteForum {
+favoritarPostagem(Postagem postagem): void
}

class Comentario{
-imagem: String
-video: String
-data: Date
-texto: String
-quantidadeUps: int
-quantidadeDowns: int
-id: String
+Comentario(ComentarioStates estado): void
+resposderComentario(Comentario resposta): void
+upComentario(ParticipanteForum participante): void
+downComentario(ParticipanteForum participante): void
+adicionaVideo(String video): void
+removeVideo(): void
+adicionaImagem(String imagem): void
+removeImagem(): void
}

class ComentarioPlebeu implements ComentarioStates {
+resposderComentario(Comentario resposta): void
+upComentario(ParticipanteForum participante): void
+downComentario(ParticipanteForum participante): void
+adicionaVideo(String video): void
+removeVideo(): void
+adicionaImagem(String imagem): void
+removeImagem(): void
}

interface ComentarioStates {
+resposderComentario(Comentario resposta): void
+upComentario(ParticipanteForum participante): void
+downComentario(ParticipanteForum participante): void
+adicionaVideo(String video): void
+removeVideo(): void
+adicionaImagem(String imagem): void
+removeImagem(): void
}

class ComentarioPremium implements ComentarioStates {
+resposderComentario(Comentario resposta): void
+upComentario(ParticipanteForum participante): void
+downComentario(ParticipanteForum participante): void
+adicionaVideo(String video): void
+removeVideo(): void
+adicionaImagem(String imagem): void
+removeImagem(): void
}

class Postagem {
-data: Date
-texto: String
-imagem: String
-video: String
-id: String
-quantidadeUps: int
-quantidadeDowns: int
+upPostagem(ParticipanteForum participante): void
+downPostagem(ParticipanteForum participante): void
+adicionaComentario(Comentario comentario): void
+apagaComentario(Comentario comentario): void
+adicionaVideo(String video): void
+removeVideo(): void
+adicionaImagem(String imagem): void
+removeImagem(): void
}  


Comentario "1" -left-> "1" ComentarioStates : estado
Forum "1" -left-> "1" Usuario : criador
Comentario "1" --> "1" ParticipanteForum : criador
Postagem "1" --> "1" ParticipanteForum : criador
ParticipanteForum "1" --> "N" Postagem : favoritas
Postagem "1" *-up-> "N" Comentario : comentarios
Comentario "1" -right-> "N" Comentario : respostas
Forum "1" -down-> "N" ParticipanteForum : participantes
Forum "1" -down-> "N" AdministradorForum : administradores
Forum "1" *-up-> "N" Postagem : postagens
ParticipanteForum --|> Usuario
AdministradorForum -right-|> ParticipanteForum
Usuario "1" --> "N" Usuario : amigos
Usuario "1" o-down- "1" Pessoa
Pessoa "1" -down-> "1" Endereco
Mensagem "1" -right-> "1" Usuario : remetente
Mensagem "1" -right-> "1" Usuario : destinatario
@enduml